apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: dataproduct-template
  title: Data Product
  description: Template definition of a Data Product
  tags:
    - data-product
spec:
  owner: agilelab
  type: dataproduct

  parameters:
    - title: Data Product details
      required:
        - identifier
        - description
        - domain
        - dataProductOwner
        - developmentGroup
        - email
        - name
      properties:
        identifier:
          title: Identifier
          type: string
          ui:field: IdentifierPicker
          description: A unique uneditable identifier for the entity inside the domain. It is expected to be a sequence of [a-zA-Z] letters separated by any of [-_] symbols. An example could be 'customer' or 'invoice-finance'.
        fullyQualifiedName:
          title: Fully Qualified Name
          type: string
          description: Human-readable name that identifies the Data Product
        name:
          title: Name
          type: string
          description: A name used for display purposes (required)
        description:
          title: Description
          type: string
          description: Detailed description about what functional area this DP is representing, what purpose has, and business related information
        domain:
          title: Domain
          type: string
          description: the Domain of the Data Product
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
        developmentGroup:
          title: Development Group
          type: string
          description: Data Product development group. This will be the group of developers with access to the Data Product repositories
          ui:field: OwnerPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Group
        dataProductOwner:
          title: Data Product Owner
          type: string
          description: User who owns the Data Product
          ui:field: OwnerPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - User
        email:
          title: Contact email
          type: string
          description: Point of contact, it could be the owner or a distribution list, but must be reliable and responsive
        informationSLA:
          title: Information SLA
          type: string
          description: Describe what SLA the DP team is providing to answer additional information requests about the Data Product
        maturity:
          title: Maturity
          type: string
          description: Let the consumer understand if it is a tactical solution or not. Could be really useful during migration from DWH or Data Lake.
          enum:
            - Tactical
            - Strategic
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - gitlab.com
        rootDirectory:
          title: Root Directory
          type: string
          description: Path that will be used as the repository root for this Data Product
          default: .

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: '{{ parameters.rootDirectory }}'
        copyWithoutRender:
          - .gitlab-ci.yml
        values:
          domain: '{{ parameters.domain }}'
          identifier: '{{ parameters.identifier }}'
          destination: '{{ parseRepoUrl parameters.repoUrl }}'
          description: '{{ parameters.description }}'
          dataProductOwner: '{{ parameters.dataProductOwner }}'
          developmentGroup: '{{ parameters.developmentGroup }}'
          email: '{{ parameters.email }}'
          fullyQualifiedName: '{{ parameters.fullyQualifiedName }}'
          name: '{{ parameters.name }}'
          informationSLA: '{{ parameters.informationSLA }}'
          maturity: '{{ parameters.maturity }}'
    - id: publish
      name: Publish
      action: witboostMeshComponent:publish:gitlab
      input:
        allowedHosts: ['gitlab.com']
        description: 'This is {{ parameters.name }}'
        repoUrl: '{{ parameters.repoUrl }}'
        rootDirectory: '{{ parameters.rootDirectory }}'
        dataproduct: '{{ parameters.dataproduct }}'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/{{ parameters.rootDirectory }}/catalog-info.yaml'

  output:
    remoteUrl: '{{ steps.publish.output.remoteUrl }}'
    entityRef: '{{ steps.register.output.entityRef }}'
